{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/trybeTreino/unix_tests/trybeGitTreino/trybe-exercises/exercises/Desenvolvimento Front-end/Bloco_12/dia_2/my-form-2.0/src/components/Forms.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Forms extends React.Component {\n  constructor() {\n    super();\n\n    this.UpperCase = event => {\n      this.setState(() => {\n        const valor = event.target.value;\n        const convert = valor.toUpperCase();\n        return {\n          name: convert\n        };\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: ''\n    };\n  }\n\n  render() {\n    const {\n      name,\n      email\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"formul\\xE1rio bullet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          name: \"name\",\n          id: \"name\",\n          maxlength: \"40\",\n          onChange: this.UpperCase,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          name: \"email\",\n          id: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/gabriel/trybeTreino/unix_tests/trybeGitTreino/trybe-exercises/exercises/Desenvolvimento Front-end/Bloco_12/dia_2/my-form-2.0/src/components/Forms.jsx"],"names":["React","Forms","Component","constructor","UpperCase","event","setState","valor","target","value","convert","toUpperCase","name","state","email","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AACjDC,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,SATc,GASDC,KAAD,IAAW;AACrB,WAAKC,QAAL,CAAc,MAAM;AAClB,cAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA3B;AACA,cAAMC,OAAO,GAAGH,KAAK,CAACI,WAAN,EAAhB;AACA,eAAO;AAAEC,UAAAA,IAAI,EAAEF;AAAR,SAAP;AACD,OAJD;AAKD,KAfa;;AAGZ,SAAKG,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE,EADK;AAEXE,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AASDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAkB,KAAKD,KAA7B;AACA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,MADP;AACc,UAAA,KAAK,EAAED,IADrB;AAC2B,UAAA,IAAI,EAAC,MADhC;AACuC,UAAA,EAAE,EAAC,MAD1C;AACiD,UAAA,SAAS,EAAC,IAD3D;AACgE,UAAA,QAAQ,EAAE,KAAKR,SAD/E;AAC0F,UAAA,QAAQ;AADlG;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,+BACA;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,KAAK,EAAGU,KAA5B;AAAoC,UAAA,IAAI,EAAC,OAAzC;AAAiD,UAAA,EAAE,EAAC,OAApD;AAA4D,UAAA,QAAQ;AAApE;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAhCgD","sourcesContent":["import React from 'react';\n\nexport default class Forms extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n    }\n  }\n\n  UpperCase = (event) => {    \n    this.setState(() => {\n      const valor = event.target.value;\n      const convert = valor.toUpperCase();\n      return { name: convert, }\n    })\n  }\n  render() {\n    const { name, email } = this.state;\n    return (\n      <div>\n        <h1>formul√°rio bullet</h1>\n        <label htmlFor=\"name\">\n          Nome:\n          <input\n            type=\"text\" value={name} name=\"name\" id=\"name\" maxlength=\"40\" onChange={this.UpperCase} required />\n        </label>\n        <label htmlFor=\"email\">\n        <input type=\"email\" value={ email } name=\"email\" id=\"email\" required />\n        </label>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}